# Dataset and Splits
data_root: DATA
dataset_class: mlwiz.data.dataset.PlanetoidDatasetInterface
dataset_name:  cora
data_splits_file:  examples/DATA_SPLITS/cora/cora_outer10_inner1.splits


# Hardware
device:  cpu
max_cpus:  4
max_gpus: 0
gpus_per_task:  1


# Data Loading
dataset_getter: mlwiz.data.provider.LinkPredictionSingleGraphDataProvider
data_loader:
  class_name: torch_geometric.loader.DataLoader
  args:
    num_workers : 0
    pin_memory: False


# Reproducibility
seed: 42


# Experiment
result_folder: RESULTS
exp_name: link_prediction_grid_search_toy
experiment: mlwiz.experiment.supervised_task.SupervisedTask
higher_results_are_better: True
evaluate_every: 1
risk_assessment_training_runs: 3


grid:
  supervised_config:
    model: mlwiz.model.graph.toy_dgn.ToyDGN
    checkpoint: True
    shuffle: True
    batch_size: 32
    epochs: 10

    # Model specific arguments #

    dim_embedding: 5
    num_layers:
      - 3
      - 5
    aggregation: mean

    # ------------------------ #

    # Optimizer (with an example - 3 possible alternatives)
    optimizer:
      - class_name: mlwiz.training.callback.optimizer.Optimizer
        args:
          optimizer_class_name: torch.optim.Adam
          lr:
            - 0.01
            - 0.001
          weight_decay: 0.

    # Scheduler (optional)
    scheduler: null

    # Loss metric (with an example of Additive Loss)
    loss: mlwiz.training.callback.metric.DotProductLink

    # Score metric (with an example of Multi Score)
    scorer: mlwiz.training.callback.metric.ToyMetric

    # Readout (optional)
    readout: mlwiz.model.readout.link_readout.DotProductLinkReadout

    # Training engine
    engine: mlwiz.training.engine.LinkPredictionSingleGraphEngine

    # Gradient clipper (optional)
    gradient_clipper: null

    # Early stopper (optional, with an example of "patience" early stopping on the validation score)
    early_stopper:
      - class_name:
          - mlwiz.training.callback.early_stopping.PatienceEarlyStopper
        args:
          patience:
            - 5
          # SYNTAX: (train_,validation_)[name_of_the_scorer_or_loss_to_monitor] -> we can use MAIN_LOSS or MAIN_SCORE
          monitor: validation_main_score
          mode: max  # is best the `max` or the `min` value we are monitoring?
          checkpoint: True  # store the best checkpoint

    # Plotter of metrics
    plotter: mlwiz.training.callback.plotter.Plotter